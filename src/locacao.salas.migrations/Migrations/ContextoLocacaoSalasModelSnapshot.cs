// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mtgroup.locacao;

namespace mtgroup.db.Migrations
{
    [DbContext(typeof(ContextoLocacaoSalas))]
    partial class ContextoLocacaoSalasModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("mtgroup.locacao.DTO.PerfilSalaReuniaoInterno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("QuantidadeAssentos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Recursos")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Identificador")
                        .IsUnique()
                        .HasDatabaseName("perfil_sala_identificador");

                    b.ToTable("perfil_sala_reuniao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Grupo = "Grupo01",
                            Identificador = "01",
                            QuantidadeAssentos = (ushort)10,
                            Recursos = 7
                        },
                        new
                        {
                            Id = 2,
                            Grupo = "Grupo01",
                            Identificador = "02",
                            QuantidadeAssentos = (ushort)10,
                            Recursos = 7
                        },
                        new
                        {
                            Id = 3,
                            Grupo = "Grupo01",
                            Identificador = "03",
                            QuantidadeAssentos = (ushort)10,
                            Recursos = 7
                        },
                        new
                        {
                            Id = 4,
                            Grupo = "Grupo01",
                            Identificador = "04",
                            QuantidadeAssentos = (ushort)10,
                            Recursos = 7
                        },
                        new
                        {
                            Id = 5,
                            Grupo = "Grupo01",
                            Identificador = "05",
                            QuantidadeAssentos = (ushort)10,
                            Recursos = 7
                        },
                        new
                        {
                            Id = 6,
                            Grupo = "Grupo02",
                            Identificador = "06",
                            QuantidadeAssentos = (ushort)10,
                            Recursos = 2
                        },
                        new
                        {
                            Id = 7,
                            Grupo = "Grupo02",
                            Identificador = "07",
                            QuantidadeAssentos = (ushort)10,
                            Recursos = 2
                        },
                        new
                        {
                            Id = 8,
                            Grupo = "Grupo03",
                            Identificador = "08",
                            QuantidadeAssentos = (ushort)3,
                            Recursos = 10
                        },
                        new
                        {
                            Id = 9,
                            Grupo = "Grupo03",
                            Identificador = "09",
                            QuantidadeAssentos = (ushort)3,
                            Recursos = 10
                        },
                        new
                        {
                            Id = 10,
                            Grupo = "Grupo03",
                            Identificador = "10",
                            QuantidadeAssentos = (ushort)3,
                            Recursos = 10
                        },
                        new
                        {
                            Id = 11,
                            Grupo = "Grupo04",
                            Identificador = "11",
                            QuantidadeAssentos = (ushort)20,
                            Recursos = 0
                        },
                        new
                        {
                            Id = 12,
                            Grupo = "Grupo04",
                            Identificador = "12",
                            QuantidadeAssentos = (ushort)20,
                            Recursos = 0
                        });
                });

            modelBuilder.Entity("mtgroup.locacao.DataModel.ReservaSalaReuniao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoReserva")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdSalaReservada")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("QuantidadePessoas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CodigoReserva")
                        .IsUnique()
                        .HasDatabaseName("reserva_sala_codigo_reserva_unico");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("reserva_sala_reuniao");
                });

            modelBuilder.Entity("mtgroup.locacao.DataModel.Solicitante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("nomeLogin");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("sistema_usuario_identificador");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("sistema_usuario_nome");

                    b.ToView("sistema_usuario_conectado");
                });

            modelBuilder.Entity("mtgroup.locacao.DataModel.ReservaSalaReuniao", b =>
                {
                    b.HasOne("mtgroup.locacao.DataModel.Solicitante", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("mtgroup.locacao.DataModel.PeriodoLocacao", "Periodo", b1 =>
                        {
                            b1.Property<int>("ReservaSalaReuniaoId")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("Inicio")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Termino")
                                .HasColumnType("TEXT");

                            b1.HasKey("ReservaSalaReuniaoId");

                            b1.ToTable("reserva_sala_reuniao");

                            b1.WithOwner()
                                .HasForeignKey("ReservaSalaReuniaoId");
                        });

                    b.Navigation("Periodo");

                    b.Navigation("Solicitante");
                });
#pragma warning restore 612, 618
        }
    }
}
